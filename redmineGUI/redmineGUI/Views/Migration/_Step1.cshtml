@model redmineGUI.Models.ApiKeyModel

<form id="apiKeyForm">
    <div class="d-flex flex-row flex-wrap justify-content-center gap-5">
        <div class="flex-fill p-5 mb-4 bg-body-tertiary rounded-3" id="import-container">
            <h2 class="text-center mb-2">Import server</h2>
            <div class="form-group mt-3">
                <input asp-for="ApiKeyImport" class="form-control" placeholder="API Key" />
                <span asp-validation-for="ApiKeyImport" class="text-danger"></span>
            </div>
            <div class="form-group mt-3">
                <input asp-for="BaseUrlImport" class="form-control" placeholder="Base URL" />
                <span asp-validation-for="BaseUrlImport" class="text-danger"></span>
            </div>
        </div>
        <div class="flex-fill p-5 mb-4 bg-body-tertiary rounded-3" id="export-container">
            <h2 class="text-center mb-2">Export server</h2>
            <div class="form-group mt-3">
                <input asp-for="ApiKeyExport" class="form-control" placeholder="API Key" />
                <span asp-validation-for="ApiKeyExport" class="text-danger"></span>
            </div>
            <div class="form-group mt-3">
                <input asp-for="BaseUrlExport" class="form-control" placeholder="Base URL" />
                <span asp-validation-for="BaseUrlExport" class="text-danger"></span>
            </div>
        </div>
    </div>
    <div class="d-flex justify-content-center">
        <button type="submit" class="btn btn-block w-50 btn-primary">Next step</button>
    </div>
</form>

<script>
    $(function(){
        $('#apiKeyForm').on('submit', function(e){
            e.preventDefault();
            // clear old validation state
            $('.is-invalid').removeClass('is-invalid');
            $('.field-validation-error').text('');

            const model = {
                ApiKeyExport: $('#ApiKeyExport').val(),
                BaseUrlExport: $('#BaseUrlExport').val(),
                ApiKeyImport: $('#ApiKeyImport').val(),
                BaseUrlImport: $('#BaseUrlImport').val()
            };

            $.ajax({
                url: '/Migration/SaveApiKey',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(model),
                success: function(resp){
                    if (resp.success) {
                        loadStepContent(2);
                    } else {
                        // this branch usually wonâ€™t run; validation comes back as 400
                        showErrors(resp.errors);
                    }
                },
                error: function(xhr){
                    if (xhr.status === 400 && xhr.responseJSON && xhr.responseJSON.errors) {
                        showErrors(xhr.responseJSON.errors);
                    } else {
                        alert('An unexpected error occurred.');
                    }
                }
            });
        });

        function showErrors(errors) {
            // errors is a dictionary: { ApiKeyExport: ["msg1"], BaseUrlImport: ["msgA","msgB"] }
            $.each(errors, function(field, messages){
                // find the input and the validation span
                var input = $('[name="' + field + '"]');
                var span  = $('[data-valmsg-for="' + field + '"]');

                // mark the input invalid
                input.addClass('is-invalid');
                // show the first message
                span.text(messages[0]);
            });
        }
    });

</script>